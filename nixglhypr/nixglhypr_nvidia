#!/bin/bash
set -e
unset tmpfile
atexit() {
	[[ -n ${tmpfile-} ]] && rm -f "$tmpfile"
}
trap atexit EXIT
trap 'rc=$?; trap - EXIT; atexit; exit $?' INT PIPE TERM
tmpfile=$(mktemp "/tmp/${0##*/}.tmp.XXXXXX")

cache=${HOME}/.cache/nixglhypr/
mkdir -p ${cache}

function copy_so() {
	orig=$1
	cache=$2
	suffix=$3
	dir=${cache%/}/$(dirname ${orig} | sed "s/\//__/g")/${suffix}
	new=${dir%/}/$(basename ${orig})
	mkdir -p ${dir}
	cp ${orig} ${new}
	chmod o+w ${new}
	patchelf --set-rpath ${dir} ${new}
}
export -f copy_so

if ! test -f ${cache%/}/.cached; then
    ldconfig -p | sed 's/.*=> //' | grep -v 'libs found in cache' | grep -v 'Cache generated by' > ${tmpfile}
	cat <<EOF | xargs -I {} grep {} ${tmpfile} | xargs -I {} bash -c "copy_so {} ${cache} lib"
    libGLESv1_CM_nvidia\.so.*$
    libGLESv2_nvidia\.so.*$
    libglxserver_nvidia\.so.*$
    libnvcuvid\.so.*$
    libnvidia-allocator\.so.*$
    libnvidia-cfg\.so.*$
    libnvidia-compiler\.so.*$
    libnvidia-eglcore\.so.*$
    libnvidia-encode\.so.*$
    libnvidia-fbc\.so.*$
    libnvidia-glcore\.so.*$
    libnvidia-glsi\.so.*$
    libnvidia-glvkspirv\.so.*$
    libnvidia-gpucomp\.so.*$
    libnvidia-ml\.so.*$
    libnvidia-ngx\.so.*$
    libnvidia-nvvm\.so.*$
    libnvidia-opencl\.so.*$
    libnvidia-opticalflow\.so.*$
    libnvidia-ptxjitcompiler\.so.*$
    libnvidia-rtcore\.so.*$
    libnvidia-tls\.so.*$
    libnvidia-vulkan-producer\.so.*$
    libnvidia-wayland-client\.so.*$
    libnvoptix\.so.*$
    libnvtegrahv\.so.*$
    libdrm\.so.*$
    libffi\.so.*$
    libgbm\.so.*$
    libexpat\.so.*$
    libxcb-glx\.so.*$
    libX11-xcb\.so.*$
    libX11\.so.*$
    libXext\.so.*$
    libxcb-randr\.so.*$
    libxcb\.so.*$
    libXau\.so.*$
    libXdmcp\.so.*$
    libwayland-server\.so.*$
    libwayland-client\.so.*$
    libva.*\.so.*$
    libbsd\.so.*$
    libmd\.so.*$
EOF
	cat <<EOF | xargs -I {} grep {} ${tmpfile} | xargs -I {} bash -c "copy_so {} ${cache} egl"
    libgallium-.*-arch.*\.so.*$
    libxcb-dri3\.so.*$
    libsensors\.so.*$
    libLLVM\.so.*$
    libzstd\.so.*$
    libglapi\.so.*$
	libdrm_radeon\.so.*$
	libelf\.so.*$
	libdrm_amdgpu\.so.*$
	libdrm_intel\.so.*$
	libffi\.so.*$
	libedit\.so.*$
	libncursesw\.so.*$
	libxml2\.so.*$
    libxcb\.so.*$
    libpciaccess\.so.*$
    liblzma\.so.*$
    libicuuc\.so.*$
    libicudata\.so.*$
    libEGL_nvidia\.so.*$
    libnvidia-egl-wayland\.so.*$
    libnvidia-egl-gbm\.so.*$
    libwayland-egl\.so.*$
EOF
    # for swaylock auth
	cat <<EOF | xargs -I {} grep {} ${tmpfile} | xargs -I {} bash -c "copy_so {} ${cache} pam"
    libpam\.so.*$
    libcrypt\.so.*$
    libnsl\.so.*$
    libaudit\.so.*$
    libcap-ng\.so.*$
	libtirpc\.so.*$
    libgssapi_krb5\.so.*$
    libkrb5\.so.*$
    libk5crypto\.so.*$
    libcom_err\.so.*$
    libkrb5support\.so.*$
    libkeyutils\.so.*$
	libresolv\.so.*$
EOF

	touch ${cache%/}/.cached
fi

cat <<EOF
It works with dirty hacks.
If it doesn't work properly due to system updates, etc., please try

rm -r ${cache}
EOF

ps=$(find ${cache} -mindepth 2 -maxdepth 2)
for p in ${ps}; do
	LD_LIBRARY_PATH=${p}:${LD_LIBRARY_PATH}
done

export LD_LIBRARY_PATH
exec $@
