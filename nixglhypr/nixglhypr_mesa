#!/bin/bash
set -e
unset tmpfile
atexit() {
	[[ -n ${tmpfile-} ]] && rm -f "$tmpfile"
}
trap atexit EXIT
trap 'rc=$?; trap - EXIT; atexit; exit $?' INT PIPE TERM
tmpfile=$(mktemp "/tmp/${0##*/}.tmp.XXXXXX")

cache=${HOME}/.cache/nixglhypr/
mkdir -p ${cache}

function copy_so() {
	orig=$1
	cache=$2
	suffix=$3
	dir=${cache%/}/$(dirname ${orig} | sed "s/\//__/g")/${suffix}
	new=${dir%/}/$(basename ${orig})
	mkdir -p ${dir}
	cp ${orig} ${new}
	chmod o+w ${new}
	patchelf --set-rpath ${dir} ${new}
}
export -f copy_so

if ! test -f ${cache%/}/.cached; then
    ldconfig -p | sed 's/.*=> //' | grep -v 'libs found in cache' | grep -v 'Cache generated by' >${tmpfile}
    # for swaylock auth
	cat <<EOF | xargs -I {} grep {} ${tmpfile} | xargs -I {} bash -c "copy_so {} ${cache} pam"
    libpam\.so.*$
    libaudit\.so.*$
    libcap-ng\.so.*$
    libgssapi_krb5\.so.*$
    libkrb5\.so.*$
    libk5crypto\.so.*$
    libcom_err\.so.*$
    libkrb5support\.so.*$
    libkeyutils\.so.*$
EOF
	touch ${cache%/}/.cached
fi

cat <<EOF
It works with dirty hacks.
If it doesn't work properly due to system updates, etc., please try

rm -r ${cache}
EOF

LD_LIBRARY_PATH=LIB_VALUE

ps=$(find ${cache} -mindepth 2 -maxdepth 2)
for p in ${ps}; do
	LD_LIBRARY_PATH=${p}:${LD_LIBRARY_PATH}
done

export LIBGL_DRIVERS_PATH=DRI_VALUE
export __EGL_VENDOR_LIBRARY_FILENAMES=GLVND_VALUE/egl_vendor.d/50_mesa.json
export LD_LIBRARY_PATH
exec $@
